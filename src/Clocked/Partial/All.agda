{-# OPTIONS --guarded #-}
module Clocked.Partial.All where

open import Prelude

open import Later
open import Clocked.Partial

private variable
  โ โโฒ โโณ : Level
  A B : ๐ฐ โ
  ฮบ : Cl

-- predicate on a partiality monad

data gAllแต (ฮบ : Cl) (P : A โ ๐ฐ โโฒ) : gPart ฮบ A โ ๐ฐ (level-of-type A โ โโฒ) where
  gAll-now   : โ {a}
             โ P a โ gAllแต ฮบ P (now a)
  gAll-later : โ {pโน}
             โ โธ ฮบ (gAllแต ฮบ P โ pโน)
             โ gAllแต ฮบ P (later pโน)

Allแต : (A โ ๐ฐ โโฒ) โ Part A โ ๐ฐ (level-of-type A โ โโฒ)
Allแต P p = โ ฮบ โ gAllแต ฮบ P (p ฮบ)

all-ฮดแต : โ {P : A โ ๐ฐ โโฒ} {p : gPart ฮบ A}
       โ gAllแต ฮบ P p โ gAllแต ฮบ P (ฮดแต p)
all-ฮดแต = gAll-later โ next

all-ฮด : โ {P : A โ ๐ฐ โโฒ} {p : Part A}
      โ Allแต P p โ Allแต P (ฮดแต p)
all-ฮด a ฮบ = all-ฮดแต (a ฮบ)

all-mapแต : โ {P : A โ ๐ฐ โโฒ} {Q : B โ ๐ฐ โโณ}
             {p : gPart ฮบ A} {f : A โ B}
         โ (โ {x} โ P x โ Q (f x))
         โ gAllแต ฮบ P p
         โ gAllแต ฮบ Q (mapแต f p)
all-mapแต af (gAll-now ap)    = gAll-now (af ap)
all-mapแต af (gAll-later apโน) = gAll-later ฮป ฮฑ โ all-mapแต af (apโน ฮฑ)

all-map : โ {P : A โ ๐ฐ โโฒ} {Q : B โ ๐ฐ โโณ}
            {p : Part A} {f : A โ B}
         โ (โ {x} โ P x โ Q (f x))
         โ Allแต P p
         โ Allแต Q (mapแต f p)
all-map af ap ฮบ = all-mapแต af (ap ฮบ)

all-weakenแต : โ {P : A โ ๐ฐ โโฒ} {Q : A โ ๐ฐ โโณ}
               {p : gPart ฮบ A}
            โ (โ {x} โ P x โ Q x)
            โ gAllแต ฮบ P p
            โ gAllแต ฮบ Q p
all-weakenแต {ฮบ} {Q} {p} af ap = subst (gAllแต ฮบ Q) (mapแต-id p) (all-mapแต {f = id} af ap)

all-weaken : โ {P : A โ ๐ฐ โโฒ} {Q : A โ ๐ฐ โโณ}
               {p : Part A}
           โ (โ {x} โ P x โ Q x)
           โ Allแต P p
           โ Allแต Q p
all-weaken af ap ฮบ = all-weakenแต af (ap ฮบ)

all->>=แต : โ {P : A โ ๐ฐ โโฒ} {Q : B โ ๐ฐ โโณ}
            {p : gPart ฮบ A} {f : A โ gPart ฮบ B}
         โ gAllแต ฮบ P p โ (โ {x} โ P x โ gAllแต ฮบ Q (f x))
         โ gAllแต ฮบ Q (p >>=แต f)
all->>=แต (gAll-now ap)    af = af ap
all->>=แต (gAll-later apโน) af = gAll-later ฮป ฮฑ โ all->>=แต (apโน ฮฑ) af  -- need combinators for (m)apping over indexed+guarded types

all->>= : โ {P : A โ ๐ฐ โโฒ} {Q : B โ ๐ฐ โโณ}
            {p : Part A} {f : A โ Part B}
         โ Allแต P p โ (โ {x} โ P x โ Allแต Q (f x))
         โ Allแต Q (p >>=แต f)
all->>= ap af ฮบ = all->>=แต (ap ฮบ) (ฮป {x} px โ af px ฮบ)
