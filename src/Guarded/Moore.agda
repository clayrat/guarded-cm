{-# OPTIONS --guarded #-}
module Guarded.Moore where

open import Prelude
open import Data.List

open import LaterG

private variable
  โ โโฒ โโณ โโด : Level
  A : ๐ฐ โ
  B : ๐ฐ โโฒ
  C : ๐ฐ โโณ
  D : ๐ฐ โโด

-- Moore machine

-- A = input, B = output
data Moore (A : ๐ฐ โ) (B : ๐ฐ โโฒ) : ๐ฐ (โ โ โโฒ) where
  Mre : B โ (A โ โน Moore A B) โ Moore A B

module Moore-code where
  Code-body : โน (Moore A B โ Moore A B โ ๐ฐ (level-of-type A โ level-of-type B))
            โ Moore A B โ Moore A B โ ๐ฐ (level-of-type A โ level-of-type B)
  Code-body Cโน (Mre bx kx) (Mre by ky) = (bx ๏ผ by) ร (โ a โ โธ (Cโน โ kx a โ ky a))

  Code : Moore A B โ Moore A B โ ๐ฐ (level-of-type A โ level-of-type B)
  Code = fix Code-body

  Code-mm-eq : {bx by : B} {kx ky : A โ โน Moore A B}
             โ Code (Mre bx kx) (Mre by ky) ๏ผ (bx ๏ผ by) ร (โ a โ โธ (โนmap Code (kx a) โ ky a))
  Code-mm-eq {A} {bx} {by} {kx} {ky} i = (bx ๏ผ by) ร ((a : A) โ โน[ ฮฑ ] pfix Code-body i ฮฑ (kx a ฮฑ) (ky a ฮฑ))

  Code-mmโ : {bx by : B} {kx ky : A โ โน Moore A B}
            โ Code (Mre bx kx) (Mre by ky)
            โ (bx ๏ผ by) ร (โ a โ โธ (โนmap Code (kx a) โ ky a))
  Code-mmโ = transport Code-mm-eq

  โCode-mm : {bx by : B} {kx ky : A โ โน Moore A B}
            โ (bx ๏ผ by) ร (โ a โ โธ (โนmap Code (kx a) โ ky a))
            โ Code (Mre bx kx) (Mre by ky)
  โCode-mm = transport (sym Code-mm-eq)

  Code-refl-body : โน ((m : Moore A B) โ Code m m)
                 โ (m : Moore A B) โ Code m m
  Code-refl-body Cโน (Mre b k) = โCode-mm (refl , ฮป a โ Cโน โ k a)

  Code-refl : (m : Moore A B) โ Code m m
  Code-refl = fix Code-refl-body

  encode : {p q : Moore A B} โ p ๏ผ q โ Code p q
  encode {p} {q} e = subst (Code p) e (Code-refl p)

  decode : โ (p q : Moore A B) โ Code p q โ p ๏ผ q
  decode (Mre bx kx) (Mre by ky) c =
    let (be , ke) = Code-mmโ c in
    apยฒ Mre be (fun-ext ฮป a โ โน-ext ฮป ฮฑ โ decode (kx a ฮฑ) (ky a ฮฑ) (ke a ฮฑ))

Mre-inj : {bx by : B} {kx ky : A โ โน Moore A B}
        โ Mre bx kx ๏ผ Mre by ky โ (bx ๏ผ by) ร (kx ๏ผ ky)
Mre-inj {kx} {ky} e =
  let (be , ke) = Moore-code.Code-mmโ (Moore-code.encode e) in
  be , fun-ext ฮป a โ โน-ext ฮป ฮฑ โ Moore-code.decode (kx a ฮฑ) (ky a ฮฑ) (ke a ฮฑ)

ฮฝ : Moore A B โ B
ฮฝ (Mre b _) = b

ฮด : Moore A B โ A โ โน Moore A B
ฮด (Mre _ k) = k

unfoldแต-body : (C โ B ร (A โ C))
             โ โน (C โ Moore A B)
             โ C โ Moore A B
unfoldแต-body f uโน c =
  let (b , g) = f c in
    Mre b ฮป a โ uโน โ next (g a)

unfoldแต : (C โ B ร (A โ C)) โ C โ Moore A B
unfoldแต f = fix (unfoldแต-body f)

unfoldListแต : (List A โ B) โ Moore A B
unfoldListแต = unfoldแต (ฮป f โ f [] , ฮป a as โ f (a โท as))

-- functor

mapแต-body : (B โ C)
          โ โน (Moore A B โ Moore A C)
          โ Moore A B โ Moore A C
mapแต-body f mโน (Mre b tr) = Mre (f b) ฮป a โ mโน โ tr a

mapแต : (B โ C)
     โ Moore A B โ Moore A C
mapแต f = fix (mapแต-body f)

-- functor laws

mapแต-id : (m : Moore A B)
        โ mapแต id m ๏ผ m
mapแต-id = fix ฮป ihโน โ ฮป where
  m@(Mre b tr) โ
      happly (fix-path (mapแต-body id)) m
    โ ap (Mre b) (fun-ext ฮป a โ โน-ext (ihโน โ tr a))

mapแต-comp : {f : B โ C} {g : C โ D}
          โ (m : Moore A B)
          โ mapแต g (mapแต f m) ๏ผ mapแต (g โ f) m
mapแต-comp {f} {g} = fix ฮป ihโน โ ฮป where
 m@(Mre b tr) โ
     ap (mapแต g) (happly (fix-path (mapแต-body f)) m)
   โ happly (fix-path (mapแต-body g)) (mapแต-body f (next (mapแต f)) m)
   โ ap (Mre (g (f b))) (fun-ext ฮป a โ โน-ext (ihโน โ tr a))
   โ sym (happly (fix-path (mapแต-body (g โ f))) m)


-- profunctor

dimapแต-body : (D โ A) โ (B โ C)
            โ โน (Moore A B โ Moore D C)
            โ Moore A B โ Moore D C
dimapแต-body f g dโน (Mre b tr) = Mre (g b) ฮป d โ dโน โ tr (f d)

dimapแต : (D โ A) โ (B โ C)
       โ Moore A B โ Moore D C
dimapแต f g = fix (dimapแต-body f g)

-- applicative

pureแต-body : B โ โน Moore A B โ Moore A B
pureแต-body b pโน = Mre b ฮป _ โ pโน

pureแต : B โ Moore A B
pureแต b = fix (pureแต-body b)

apแต-body : โน (Moore A (B โ C) โ Moore A B โ Moore A C)
         โ Moore A (B โ C) โ Moore A B โ Moore A C
apแต-body aโน (Mre f trf) (Mre b trb) = Mre (f b) ฮป a โ aโน โ trf a โ trb a

apแต : Moore A (B โ C) โ Moore A B โ Moore A C
apแต = fix apแต-body

-- applicative laws

apแต-id : (m : Moore A B)
       โ apแต (pureแต id) m ๏ผ m
apแต-id = fix ฮป ihโน โ ฮป where
  m@(Mre b tr) โ
      ap (ฮป q โ apแต q m) (fix-path (pureแต-body id))
    โ ap (ฮป q โ q (pureแต-body id (next (pureแต id))) m) (fix-path apแต-body)
    โ ap (Mre b) (fun-ext ฮป a โ โน-ext (ihโน โ tr a))

apแต-comp : (mf : Moore A (B โ C))
         โ (mg : Moore A (C โ D))
         โ (m : Moore A B)
         โ apแต (apแต (apแต (pureแต ฮป g โ g โ_) mg) mf) m ๏ผ apแต mg (apแต mf m)
apแต-comp = fix ฮป ihโน โ ฮป where
  mf@(Mre bf trf) mg@(Mre bg trg) m@(Mre b tr) โ
     ap (ฮป q โ apแต (apแต (apแต q mg) mf) m) (fix-path (pureแต-body (ฮป g โ g โ_)))
   โ ap (ฮป q โ apแต (apแต (q (pureแต-body (ฮป g โ g โ_) (next (pureแต (ฮป g โ g โ_)))) mg) mf) m)
        (fix-path apแต-body)
   โ ap (ฮป q โ apแต (q (apแต-body (next apแต) (pureแต-body (ฮป g โ g โ_) (next (pureแต (ฮป g โ g โ_)))) mg) mf) m)
        (fix-path apแต-body)
   โ ap (ฮป q โ q (apแต-body (next apแต) (apแต-body (next apแต) (pureแต-body (ฮป g โ g โ_) (next (pureแต (ฮป g โ g โ_)))) mg) mf) m)
        (fix-path apแต-body)
   โ ap (Mre (bg (bf b))) (fun-ext ฮป a โ โน-ext (ihโน โ trf a โโฒ trg a โโฒ tr a))
   โ ap (ฮป q โ q mg (apแต-body (next apแต) mf m)) (sym (fix-path apแต-body))
   โ ap (ฮป q โ apแต mg (q mf m)) (sym (fix-path apแต-body))

apแต-homo : {f : B โ C} {x : B}
         โ apแต {A = A} (pureแต f) (pureแต x) ๏ผ pureแต (f x)
apแต-homo {f} {x} = fix ฮป ihโน โ
    ap (apแต (pureแต f)) (fix-path (pureแต-body x))
  โ ap (ฮป q โ apแต q (pureแต-body x (next (pureแต x)))) (fix-path (pureแต-body f))
  โ ap (ฮป q โ q (pureแต-body f (next (pureแต f))) (pureแต-body x (next (pureแต x)))) (fix-path apแต-body)
  โ ap (Mre (f x)) (fun-ext ฮป a โ โน-ext ihโน)
  โ sym (fix-path (pureแต-body (f x)))

apแต-inter : {x : B}
          โ (mf : Moore A (B โ C))
          โ apแต mf (pureแต x) ๏ผ apแต (pureแต (_$ x)) mf
apแต-inter {x} = fix ฮป ihโน โ ฮป where
  mf@(Mre bf trf) โ
     ap (apแต mf) (fix-path (pureแต-body x))
   โ ap (ฮป q โ q mf (pureแต-body x (next (pureแต x)))) (fix-path apแต-body)
   โ ap (Mre (bf x)) (fun-ext (ฮป a โ โน-ext (ihโน โ trf a)))
   โ ap (ฮป q โ q (pureแต-body (_$ x) (next (pureแต (_$ x)))) mf) (sym $ fix-path apแต-body)
   โ ap (ฮป q โ apแต q mf) (sym $ fix-path (pureแต-body (_$ x)))

-- comonad

extractแต : Moore A B โ B
extractแต (Mre b _) = b

duplicateแต-body : โน (Moore A B -> Moore A (Moore A B))
                โ  Moore A B -> Moore A (Moore A B)
duplicateแต-body dโน m@(Mre _ tr) = Mre m ฮป a โ dโน โ tr a

duplicateแต : Moore A B -> Moore A (Moore A B)
duplicateแต = fix duplicateแต-body

extendแต-body : (Moore A B โ C)
             โ โน (Moore A B โ Moore A C)
             โ Moore A B โ Moore A C
extendแต-body f eโน m@(Mre b tr) = Mre (f m) ฮป a โ eโน โ tr a

extendแต : (Moore A B โ C) -> Moore A B -> Moore A C
extendแต f = fix (extendแต-body f)

-- left fold

moorel-body : (B โ A โ โน B)
            โ โน (B โ Moore A B)
            โ B โ Moore A B
moorel-body f mโน b = Mre b ฮป a โ mโน โ f b a

moorel : (B โ A โ โน B) โ B โ Moore A B
moorel f = fix (moorel-body f)

-- composition (cascade product?)

catแต-body : โน (Moore A B โ Moore B C โ Moore A C)
          โ Moore A B โ Moore B C โ Moore A C
catแต-body mโน (Mre b tra) (Mre c trb) = Mre c ฮป a โ mโน โ tra a โ trb b

catแต : Moore A B โ Moore B C โ Moore A C
catแต = fix catแต-body

-- TODO mfix ?
