{-# OPTIONS --guarded #-}
module Guarded.Moore where

open import Prelude

open import LaterG

private variable
  โ โโฒ โโณ : Level
  A : ๐ฐ โ
  B : ๐ฐ โโฒ
  C : ๐ฐ โโณ

-- Moore machine

-- A = input, B = output
data Moore (A : ๐ฐ โ) (B : ๐ฐ โโฒ) : ๐ฐ (โ โ โโฒ) where
  M : B โ (A โ โน Moore A B) โ Moore A B

-- functor

mapแต-body : (B โ C)
          โ โน (Moore A B โ Moore A C)
          โ Moore A B โ Moore A C
mapแต-body f mโน (M b tr) = M (f b) ฮป a โ mโน โ tr a

mapแต : (B โ C)
     โ Moore A B โ Moore A C
mapแต f = fix (mapแต-body f)

-- comonad

extractแต : Moore A B โ B
extractแต (M b _) = b

duplicateแต-body : โน (Moore A B -> Moore A (Moore A B))
                โ  Moore A B -> Moore A (Moore A B)
duplicateแต-body dโน m@(M _ tr) = M m ฮป a โ dโน โ tr a

duplicateแต : Moore A B -> Moore A (Moore A B)
duplicateแต = fix duplicateแต-body

extendแต-body : (Moore A B โ C)
             โ โน (Moore A B โ Moore A C)
             โ Moore A B โ Moore A C
extendแต-body f eโน m@(M b tr) = M (f m) ฮป a โ eโน โ tr a

extendแต : (Moore A B โ C) -> Moore A B -> Moore A C
extendแต f = fix (extendแต-body f)

-- left fold

moorel-body : (B โ A โ โน B)
            โ โน (B โ Moore A B)
            โ B โ Moore A B
moorel-body f mโน b = M b ฮป a โ mโน โ f b a

moorel : (B โ A โ โน B) โ B โ Moore A B
moorel f = fix (moorel-body f)

moorel1-body : (โน B โ A โ B)
            โ โน (B โ Moore A B)
            โ B โ Moore A B
moorel1-body f mโน b = M b ฮป a โ mโน โ ?
