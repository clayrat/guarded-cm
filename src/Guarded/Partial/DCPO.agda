{-# OPTIONS --guarded #-}
module Guarded.Partial.DCPO where

open import Prelude
open import Data.Empty

open import LaterG
open import Guarded.Partial

private variable
  โ โโฒ โโณ : Level
  A : ๐ฐ โ
  B : ๐ฐ โโฒ
  C : ๐ฐ โโณ

-- TODO "weak convergence"? what's the domain-theoretic name for this?

data _โแต_ {โ} {A : ๐ฐ โ} : Part A โ A โ ๐ฐ โ where
  nโแต : โ {x y}
      โ x ๏ผ y
      โ now x โแต y
  lโแต : โ {mโน y}
      โ โน[ ฮฑ ] (mโน ฮฑ โแต y)
      โ later mโน โแต y

-- TODO general hlevel?
โ-prop : is-set A
       โ (a : A) โ (p : Part A)
       โ is-prop (p โแต a)
โ-prop sA a = fix ฮป ihโน โ ฮป where
  (now x)    โ is-prop-ฮท ฮป where (nโแต eโ)  (nโแต eโ)  โ ap nโแต (is-set-ฮฒ sA x a eโ eโ)
  (later pโน) โ is-prop-ฮท ฮป where (lโแต pโนโ) (lโแต pโนโ) โ ap lโแต (is-prop-ฮฒ (โนis-prop (ihโน โ pโน)) pโนโ pโนโ)

neverโ : (a : A) โ never โแต a
neverโ a = fix ฮป ihโน โ lโแต ฮป ฮฑ โ transport (ฮป i โ pfix later (~ i) ฮฑ โแต a) (ihโน ฮฑ)

-- partial order

data _โคแต_ {โ} {A : ๐ฐ โ} : Part A โ Part A โ ๐ฐ โ where
  โคแตn  : โ {p x}
       โ p โแต x
       โ p โคแต now x
  lโคแตl : โ {mโน nโน}
       โ โน[ ฮฑ ] (mโน ฮฑ โคแต nโน ฮฑ)
       โ later mโน โคแต later nโน

ยฌnowโคlater : {x : A} {pโน : โน Part A}
           โ ยฌ (now x โคแต later pโน)
ยฌnowโคlater ()

-- TODO general hlevel?
โค-prop : is-set A
       โ (p q : Part A)
       โ is-prop (p โคแต q)
โค-prop sA = fix ฮป ihโน โ ฮป where
  p          (now y)    โ is-prop-ฮท ฮป where (โคแตn pyโ)   (โคแตn pyโ)   โ ap โคแตn (is-prop-ฮฒ (โ-prop sA y p) pyโ pyโ)
  (now x)    (later qโน) โ is-prop-ฮท ฮป xqโ โ absurd (ยฌnowโคlater xqโ)
  (later pโน) (later qโน) โ is-prop-ฮท ฮป where (lโคแตl pqโนโ) (lโคแตl pqโนโ) โ ap lโคแตl (is-prop-ฮฒ (โนis-prop (ihโน โโฒ pโน โโฒ qโน)) pqโนโ pqโนโ)

reflโค : (p : Part A) โ p โคแต p
reflโค = fix ฮป ihโน โ ฮป where
  (now x) โ โคแตn (nโแต refl)
  (later pโน) โ lโคแตl (ihโน โ pโน)

โค-contra-โ : (a : A) โ (p q : Part A)
           โ p โคแต q โ q โแต a โ p โแต a
โค-contra-โ a = fix ฮป ihโน โ ฮป where
  p           .(now x)    (โคแตn px)                       (nโแต {x} e) โ subst (p โแต_) e px
  .(later pโน) .(later qโน) (lโคแตl {mโน = pโน} {nโน = qโน} pqโน) (lโแต qaโน)   โ lโแต (ihโน โโฒ pโน โโฒ qโน โโฒ pqโน โโฒ qaโน)

transโค : (p q r : Part A)
       โ p โคแต q โ q โคแต r โ p โคแต r
transโค = fix ฮป ihโน โ ฮป where
  p           q           (now z)    pq                   (โคแตn qz)             โ โคแตn (โค-contra-โ z p q pq qz)
  .(later pโน) .(later qโน) (later rโน) (lโคแตl {mโน = pโน} pqโน) (lโคแตl {mโน = qโน} qrโน) โ lโคแตl (ihโน โโฒ pโน โโฒ qโน โโฒ rโน โโฒ pqโน โโฒ qrโน)

antisymโค : (p q : Part A)
         โ p โคแต q โ q โคแต p โ p ๏ผ q
antisymโค = fix ฮป ihโน โ ฮป where
  .(now _)    .(now _)    (โคแตn (nโแต exy))                (โคแตn _)    โ ap now exy
  .(later pโน) .(later qโน) (lโคแตl {mโน = pโน} {nโน = qโน} pqโน) (lโคแตl qpโน) โ ap later (โน-ext (ihโน โโฒ pโน โโฒ qโน  โโฒ pqโน โโฒ qpโน))

-- TODO directed-complete laws

neverโค : (p : Part A) โ never โคแต p
neverโค = fix ฮป ihโน โ ฮป where
  (now x)    โ โคแตn (neverโ x)
  (later pโน) โ lโคแตl ฮป ฮฑ โ transport (ฮป i โ pfix later (~ i) ฮฑ โคแต pโน ฮฑ) ((ihโน โ pโน) ฮฑ)
