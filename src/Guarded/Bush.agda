{-# OPTIONS --guarded #-}
module Guarded.Bush where

open import Prelude
open import Data.List

open import LaterG
open import Guarded.Partial

private variable
  โ : Level    -- TODO generalize levels?
  A B C : ๐ฐ โ

-- http://www.cs.nott.ac.uk/~psztxa/publ/tlca01a.pdf

data Bush (A : ๐ฐ โ) : ๐ฐ โ where
  bsh : A โ โน Bush (Bush A) โ Bush A

-- constant bush

-- TODO need an implicit version of โ
pureแต-body : โน ({A : ๐ฐ โ} โ A โ Bush A)
           โ    {A : ๐ฐ โ} โ A โ Bush A
pureแต-body bโน a = bsh a ฮป ฮฑ โ bโน ฮฑ (bโน ฮฑ a)

pureแต : โ {A : ๐ฐ โ} โ A โ Bush A
pureแต = fix pureแต-body

-- map

mapแต-body : โน ({A B : ๐ฐ โ} โ (A โ B) โ Bush A โ Bush B)
          โ    {A B : ๐ฐ โ} โ (A โ B) โ Bush A โ Bush B
mapแต-body mโน f (bsh a bโน) = bsh (f a) ฮป ฮฑ โ mโน ฮฑ (mโน ฮฑ f) (bโน ฮฑ)

mapแต : {A B : ๐ฐ โ} โ (A โ B) โ Bush A โ Bush B
mapแต {A} {B} f = fix mapแต-body {A} {B} f

mapแต-id : (A : ๐ฐ โ)
        โ (b : Bush A)
        โ mapแต id b ๏ผ b
mapแต-id = fix ฮป ihโน A โ ฮป where
  b@(bsh a bโน) โ
      mapแต id b
        =โจ ap (ฮป q โ q id b) (fix-path mapแต-body) โฉ
      mapแต-body (next ฮป {A} {B} โ mapแต) id b
        =โจ ap (bsh a) (โน-ext ฮป ฮฑ โ ap (ฮป q โ mapแต q (bโน ฮฑ)) (fun-ext ฮป bโฒ โ ihโน ฮฑ A bโฒ)
                                 โ ihโน ฮฑ (Bush A) (bโน ฮฑ)) โฉ
      b
        โ

mapแต-comp : (A B C : ๐ฐ โ) (f : A โ B) (g : B โ C)
          โ (b : Bush A)
          โ mapแต g (mapแต f b) ๏ผ mapแต (g โ f) b
mapแต-comp {โ} = fix ฮป ihโน A B C f g โ ฮป where
  b@(bsh a bโน) โ
      mapแต g (mapแต f b)
        =โจ ap (ฮป q โ mapแต g (q f b)) (fix-path mapแต-body) โฉ
      mapแต g (mapแต-body (next ฮป {A} {B} โ mapแต) f b)
        =โจ ap (ฮป q โ q g (mapแต-body (next ฮป {A} {B} โ mapแต) f b)) (fix-path mapแต-body) โฉ
      mapแต-body (next ฮป {A} {B} โ mapแต) g (mapแต-body (next (ฮป {A} {B} โ mapแต)) f b)
        =โจ ap (bsh (g (f a))) (โน-ext ฮป ฮฑ โ ihโน ฮฑ (Bush A) (Bush B) (Bush C)
                                                  ((ฮป {A B : ๐ฐ โ} โ mapแต {โ} {A} {B}) f)
                                                  ((ฮป {A B : ๐ฐ โ} โ mapแต {โ} {A} {B}) g)
                                                  (bโน ฮฑ)
                                         โ ap (ฮป q โ mapแต q (bโน ฮฑ)) (fun-ext ฮป bโฒ โ ihโน ฮฑ A B C f g bโฒ)) โฉ
      mapแต-body (next ฮป {A} {B} โ mapแต) (g โ f) b
        =โจ ap (ฮป q โ q (g โ f) b) (fix-path mapแต-body) โจ
      mapแต (g โ f) b
        โ

data BT : ๐ฐ where
  L  : BT
  Sp : BT โ BT โ BT

lamBT-body : โน ({A : ๐ฐ โ} โ (BT โ A) โ Bush A)
           โ    {A : ๐ฐ โ} โ (BT โ A) โ Bush A
lamBT-body lโน {A} f = bsh (f L) ฮป ฮฑ โ lโน ฮฑ ฮป t โ lโน ฮฑ ฮป u โ f (Sp t u)

lamBT : (BT โ A) โ Bush A
lamBT {A} = fix lamBT-body {A}

appBT-body : โน ({A : ๐ฐ โ} โ Bush A โ BT โ Part A)
           โ    {A : ๐ฐ โ} โ Bush A โ BT โ Part A
appBT-body _  (bsh a _)  L       = now a
appBT-body aโน (bsh _ f) (Sp l r) = later ฮป ฮฑ โ aโน ฮฑ (f ฮฑ) l >>=แต ฮป b โ aโน ฮฑ b r

appBT : Bush A โ BT โ Part A
appBT {A} = fix appBT-body {A}

{-
app-retr-lam : {A : ๐ฐ โ} {f : BT โ A} {t : BT}
             โ ฮฃ[ n ๊ โ ] (appBT (lamBT f) t ๏ผ delay-by n (f t))
app-retr-lam = {!!}
-}
